{"ts":1372322558781,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var feedparser      = require('feedparser')\n    , mongoose      = require('mongoose')\n    , schema        = require('./schema')\n    , app           = require('../app')\n    , resourceUri   = \"\";\n\nif ('development' == app.get('env')) {\n    resourceUri = 'mongodb://localhost/feedreaderdb';\n}else{\n    resourceUri = 'mongodb://feedreader:feedreader@dharma.mongohq.com:10067/feedreaderdb';\n}\n    \nmongoose.connect(resourceUri);\nmongoose.connection.on('error', function(err){\n    console.error('error occurred');\n    throw err;\n});\n\nfunction FeedReader(){\n}\n\nFeedReader.read = function(){\n    feedparser.parseUrl('feeds.gawker.com/gizmodo/full',\n        function(error, meta, articles){\n            if(error) console.error(error);\n            else{\n                console.log('%s - %s - %s', meta.title, meta.link, meta.xmlUrl);\n                articles.forEach(function(article){\n                    console.log(\"%s - %s(%s)\", article.date, article.title, article.link);\n                });\n            }\n        });\n};\n\nFeedReader.save = function(name){\n    var db = mongoose.connection;\n    db.on('error', console.error.bind(console, 'connection error:'));\n    db.once('open', function(){\n        var Feed = mongoose.model('Feed');\n        var feed = new Feed({name: name});\n        feed.save(function(){\n            console.log('success');\n        });\n    });\n};\n\nFeedReader.load = function(callback){\n    console.log(\"Call Reader.load\");\n    var Feed = mongoose.model('Feed');\n    Feed.find(function(err, feeds){\n        if(err) throw err;\n        else\n            callback(feeds);\n    });\n};\n\nFeedReader.loadTags = function(callback){\n    console.log('/modules/reader.js:Call Reader.loadTags');\n    var Tag = mongoose.model('Tag');\n    Tag.find(function(err, tags){\n        if(err) throw err;\n        else\n            if(callback !== undefined) callback(tags);\n    });\n};\n\nFeedReader.loadFeedTags = function(feedId, callback){\n    console.log('/modules/reader.js:Call Reader.loadFeedTags');\n    var Feed = mongoose.model('Feed');\n    Feed.findOne({_id: new mongoose.Types.ObjectId(feedId)}, function(err, feed){\n        if(err) throw err;\n        else\n            if(callback !== undefined) callback(feed);\n    });\n};\n\nFeedReader.addTag = function(tagname, callback){\n    console.log('reader.js:Reader.addTag');\n    var Tag = mongoose.model('Tag');\n    var tag = new Tag({\n        name: tagname\n    });\n    \n    tag.save(function(err, t){\n        if(err) throw err;\n        else{\n            console.log('Success to save tag.');\n            if(callback !== undefined)\n                callback(t);\n        }\n    });\n};\n\nFeedReader.addFeed = function(url, callback){\n    feedparser.parseUrl(url,\n        function(error, meta, articles){\n            if(error) console.error(error);\n            else{\n                var Feed = mongoose.model('Feed');\n                var feed = new Feed({\n                    _id: new mongoose.Types.ObjectId,\n                    name: meta.title,\n                    link: meta.link,\n                    xmlUrl: meta.xmlUrl !== null ? meta.xmlUrl : url\n                });\n                \n                console.log('Add feed. %s - %s - %s', meta.title, meta.link, meta.xmlUrl);\n                \n                feed.save(function(err, f){\n                    if(err) throw err;\n                    else{\n                        console.log('Success to save feed.');\n                        callback(f, articles);\n                    }\n                });\n            }\n        });\n};\n\nFeedReader.addArticles = function(feed, articles, callback){\n    console.log('reader.js:Reader.addArticles:');\n    console.log('articles.length:%s', articles.length);\n    var arr = new Array();\n    var endCount = 0;\n    articles.forEach(function(article){\n        var Article = mongoose.model('Article');\n        var a = new Article({\n            feedId:         feed._id,\n            date:           article.date,\n            title:          article.title,\n            description:    article.description,\n            summary:        article.summary,\n            link:           article.link\n        });\n        \n        a.save(function(err, a){\n            if(err) throw err;\n            else{\n                arr.push(a);\n                endCount++;\n                if(endCount == articles.length)\n                    if(callback !== undefined)\n                        callback(arr);\n            }\n        });\n    });\n};\n\nFeedReader.getFeedArticles = function(feedId, limit, callback){\n    console.log('reader.js:Reader.getFeedArticles:feedId=%s', feedId);\n    if('number' != typeof limit){\n        limit = 30;\n    }\n    var Article = mongoose.model('Article');\n    Article.find({feedId: new mongoose.Types.ObjectId(feedId)})\n            .sort({date: 'desc'})\n            .limit(limit)\n            .exec(callback);\n};\n\nFeedReader.getFeedsArticles = function(feedIds, limit, callback){\n    console.log('reader.js:Reader.getFeedArticles:feedIds=%s', feedIds);\n    if('number' != typeof limit){\n        limit = 30;\n    }\n    \n    var arr = new Array();\n    for(var i=0; i<feedIds.length; i++){\n        arr.push(feedIds[i]);\n    }\n    \n    var Article = mongoose.model('Article');\n    Article.find({feedId: {$in: arr} })\n            .sort({date: 'desc'})\n            .limit(limit)\n            .exec(function(err, articles){\n                if(err) throw err;\n                else\n                    if(callback !== undefined) callback(articles);\n            });\n};\n\nFeedReader.getNewArticles = function(feedId, callback){\n    var Feed = mongoose.model('Feed');\n    Feed.findById(new mongoose.Types.ObjectId(feedId), function(err, feed){\n        if(err) throw err;\n        else{\n            if(feed.xmlUrl !== null)\n                feedparser.parseUrl(feed.xmlUrl, function(err, meta, articles){\n                    callback(err, meta, articles, feed);\n                });\n        }\n    });\n};\n\nFeedReader.updateFeedTags = function(feedId, feedTags, callback){\n    var tags = new Array();\n    for(var i=0; i<feedTags.length; i++){\n        var t = feedTags[i];\n        tags.push(t._id);\n    }\n    var Feed = mongoose.model('Feed');\n    Feed.update(\n        {_id: new mongoose.Types.ObjectId(feedId)},\n        {feedTags: tags},\n        {safe: true},\n        function(err, numberAffected, raw){\n            if(err) throw err;\n            else\n               if(callback !== undefined) callback();\n        });\n};\n\nFeedReader.getTaggedFeeds = function(tagId, callback){\n    var Feed = mongoose.model('Feed');\n    Feed.find({feedTags: {$in: [new mongoose.Types.ObjectId(tagId)]}}, function(err, feeds){\n        if(err) throw err;\n        else\n            if(callback !== undefined) callback(feeds);\n    });\n};\n\nexports = module.exports = FeedReader;"]],"start1":0,"start2":0,"length1":0,"length2":6763}]],"length":6763}
